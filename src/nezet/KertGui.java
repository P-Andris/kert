/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nezet;

import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import modell.Noveny;
import modell.Kert;

/**
 *
 * @author pille
 */
public class KertGui extends javax.swing.JFrame {
    private Kert kert;
    /**
     * Creates new form KertGui
     */
    public KertGui() {
        initComponents();
        
        ablakBeallitasa();
        
        kert = new Kert();
        kertFrissites();
        comboboxFeltoltese();
        listaFeltoltese(null, null);
    }

    public void ablakBeallitasa() {
        this.setTitle("Kertészet");
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
        // this.setIconImage(new ImageIcon(getClass().getResource("icon.png")).getImage());
    }
    
    public boolean azonosAzonosito(String azonosito) {
        int i = 0, hossz = kert.getNovenyek().size();
        while(i < hossz && !(cmbAzonosito.getItemAt(i) == azonosito)) i++;
        boolean valasz = i < hossz;
        return valasz;
    }
    
    public boolean azonosNev(String nev) {
        int i = 0, hossz = kert.getNovenyek().size();
        while(i < hossz && !(cmbNev.getItemAt(i) == nev)) i++;
        boolean valasz = i < hossz;
        return valasz;
    }
    
    public void kertFrissites() {
        try {
            FileInputStream fileinputstream = new FileInputStream(new File("kert.bin"));
            ObjectInputStream objectinputstream = new ObjectInputStream(fileinputstream);
            
            kert.setNovenyek((ArrayList<Noveny>) objectinputstream.readObject());
            
            objectinputstream.close();
            fileinputstream.close();
        } catch (FileNotFoundException e) {
            System.err.println(e);
        } catch (IOException e) {
            System.err.println(e);
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public void comboboxFeltoltese() {
        for(Noveny noveny : kert.getNovenyek()) {
            if(!(azonosAzonosito(noveny.getAzonosito()))) cmbAzonosito.addItem(noveny.getAzonosito());
            if(!(azonosNev(noveny.getNev()))) cmbNev.addItem(noveny.getNev());
        }
    }
    
    public void listaFeltoltese(String azonosito, String nev) {
        DefaultListModel<String> novenyek = new DefaultListModel<>();
        
        if(azonosito == null && nev == null)  {
            for(Noveny noveny : kert.getNovenyek()) {
                String sor = String.format("%s/%s/%d/%d", noveny.getAzonosito(), noveny.getNev(), noveny.getKor(), noveny.getAr());
                novenyek.addElement(sor);
            }
        }
        else {
            for(Noveny noveny : kert.getNovenyek()) {
                if(azonosito.equals(noveny.getAzonosito()) && nev.equals(noveny.getNev())) {
                    String sor = String.format("%s/%s/%d/%d", noveny.getAzonosito(), noveny.getNev(), noveny.getKor(), noveny.getAr());
                    novenyek.addElement(sor);
                }
            }
        }
        
        listNovenyek.setModel(novenyek);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        cmbAzonosito = new javax.swing.JComboBox<>();
        cmbNev = new javax.swing.JComboBox<>();
        btnKereses = new javax.swing.JButton();
        lblAzonosito = new javax.swing.JLabel();
        lblNev = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listNovenyek = new javax.swing.JList<>();
        btnOsszesNoveny = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuitemMentes = new javax.swing.JMenuItem();
        menuitemKilepes = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnKereses.setText("Keresés");
        btnKereses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeresesActionPerformed(evt);
            }
        });

        lblAzonosito.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAzonosito.setText("Azonosító:");

        lblNev.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNev.setText("Név:");

        jScrollPane1.setViewportView(listNovenyek);

        btnOsszesNoveny.setText("Összes növény");
        btnOsszesNoveny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsszesNovenyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbAzonosito, 0, 113, Short.MAX_VALUE)
                            .addComponent(lblAzonosito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbNev, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNev, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnOsszesNoveny, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnKereses, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAzonosito)
                    .addComponent(lblNev)
                    .addComponent(btnOsszesNoveny))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbAzonosito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbNev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnKereses, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("Opciók");

        menuitemMentes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuitemMentes.setText("Mentés");
        menuitemMentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemMentesActionPerformed(evt);
            }
        });
        jMenu1.add(menuitemMentes);

        menuitemKilepes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuitemKilepes.setText("Kilépés");
        menuitemKilepes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemKilepesActionPerformed(evt);
            }
        });
        jMenu1.add(menuitemKilepes);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuitemKilepesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemKilepesActionPerformed
        int valasz = JOptionPane.showConfirmDialog(rootPane, "Biztosan ki szeretnél lépni?", "Kilépés", 0);
        if(valasz == JOptionPane.YES_OPTION) System.exit(0);
    }//GEN-LAST:event_menuitemKilepesActionPerformed

    private void btnKeresesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeresesActionPerformed
        String azonosito = (String) cmbAzonosito.getSelectedItem();
        String nev = (String) cmbNev.getSelectedItem();
        listaFeltoltese(azonosito, nev);
    }//GEN-LAST:event_btnKeresesActionPerformed

    private void menuitemMentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemMentesActionPerformed
        try {
            JFileChooser filechooser = new JFileChooser();
            int valasz = filechooser.showSaveDialog(rootPane);
            if(valasz == JFileChooser.APPROVE_OPTION) {
                ArrayList<String> novenyek = new ArrayList<>();
                
                for(int i = 0; i < listNovenyek.getModel().getSize(); i++) novenyek.add(listNovenyek.getModel().getElementAt(i));
                
                File fajl = filechooser.getSelectedFile();
                BufferedWriter bufferedwriter = new BufferedWriter(new FileWriter(fajl));
                bufferedwriter.write("AZONOSÍTÓ/NÉV/KOR/ÁR\n");
                
                for(String noveny : novenyek) {
                    String sor;
                    if(noveny != novenyek.get(novenyek.size() - 1)) sor = String.format("%s\n", noveny);
                    else sor = noveny;
                    bufferedwriter.write(sor);
                }
                
                bufferedwriter.close();
            }
        } catch (IOException e) {
            Logger.getLogger(KertGui.class.getName()).log(Level.SEVERE, null, e);
        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_menuitemMentesActionPerformed

    private void btnOsszesNovenyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsszesNovenyActionPerformed
        listaFeltoltese(null, null);
    }//GEN-LAST:event_btnOsszesNovenyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KertGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KertGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KertGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KertGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KertGui().setVisible(true);
                
                /*
                KertGui gui = new KertGui();
                gui.setTitle("Kert");
                // gui.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
                gui.setIconImage(new ImageIcon(getClass().getResource("icon.png")).getImage());
                gui.setVisible(true);
                */
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKereses;
    private javax.swing.JButton btnOsszesNoveny;
    private javax.swing.JComboBox<String> cmbAzonosito;
    private javax.swing.JComboBox<String> cmbNev;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAzonosito;
    private javax.swing.JLabel lblNev;
    private javax.swing.JList<String> listNovenyek;
    private javax.swing.JMenuItem menuitemKilepes;
    private javax.swing.JMenuItem menuitemMentes;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
